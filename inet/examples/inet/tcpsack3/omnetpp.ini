[General]


parallel-simulation = false
warnings = true
sim-time-limit = 62.0s

cmdenv-module-messages = true # for normal (non-express) mode only
cmdenv-event-banners = true   # for normal (non-express) mode only

tkenv-plugin-path = ../../../etc/plugins

#
# Network specific settings
#

# set inet_addr, Mask, MTU ( = 1500), default route (=router)
#**.client.routingFile = "client.mrt"
#**.router.routingFile = "router.mrt"
#**.server.routingFile = "server.mrt"

# ip settings
**.ip.procDelay = 0s
**.IPForward = false

# hookType settings
**.ppp[*].numOutputHooks = 1
**.ppp[*].outputHook[0].typename = "OrdinalBasedDropper" # Nop | ThruputMeter | OrdinalBasedDropper | OrdinalBasedDuplicator

# ARP settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s

# NIC settings
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 200    # packets

**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = true                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.advertisedWindow = 9553500
**.tcp.recordStats = true
**.tcp.mss = 1460

**.tcp2.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp2.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp2.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp2.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.windowScalingSupport = true                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp2.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp2.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.advertisedWindow = 9553500
**.tcp2.recordStats = true
**.tcp2.mss = 1460


[Config TCP]
network = tcpValidationTest
sim-time-limit = 62.0s
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000

**.client4.numTcpApps = 1
**.client4.tcpApp[0].typename = "TCPSinkApp"
**.client4.tcpApp[0].localPort = 1001

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "client3"
**.client2.tcpApp[0].connectPort = 1000
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 100MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets


[Config ber]
network = ber
## tcp apps
**.client2.numTcpApps = 1
**.client2.tcpApp[0].typename = "TCPSinkApp"
**.client2.tcpApp[0].localPort = 1000

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client2"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.numPcapRecorders = 1
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = false                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.advertisedWindow = 65535
**.tcp.recordStats = true

############################################################## TCP-Validation
[Config TCP-Validation]
network = tcpValidation
tcpValidation.ldelay = 12.5ms#${1.25ms, 6.25ms, 12.5ms, 18.75ms, 25ms, 31.25ms, 37.5ms}
#tcpValidation.delay = 25ms# ${1.25ms, 6.25ms, 12.5ms, 18.75ms, 25ms, 31.25ms, 37.5ms}
#**.ethg$o[*].channel.delay = 0.1s
#**.ppp[*].channel.delay = 0.1s
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 350000

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.routerEg.ppp[1].queueType = "DropTailQueue" # in routers
#**.routerEg.ppp[1].queue.frameCapacity = 150		#6.25ms
**.routerEg.ppp[1].queue.frameCapacity = 35	#12.5ms
#**.routerEg.ppp[1].queue.frameCapacity = 56	#18.75ms
#**.routerEg.ppp[1].queue.frameCapacity = 58	#25ms
#**.routerEg.ppp[1].queue.frameCapacity = 58	#31.25ms
#**.routerEg.ppp[1].queue.frameCapacity = 58	#37.5ms
############################################################## TCP-STCP-Validation
[Config TCP-STCP-Validation]
network = tcpSTCPValidation
tcpSTCPValidation.ldelay = 150ms
#tcpValidation.delay = 25ms# ${1.25ms, 6.25ms, 12.5ms, 18.75ms, 25ms, 31.25ms, 37.5ms}
#**.ethg$o[*].channel.delay = 0.1s
#**.ppp[*].channel.delay = 0.1s
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 350000

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client1.ppp[*].queueType = "DropTailQueue" # in routers
**.client1.ppp[*].queue.frameCapacity = 65
############################################################## TCP-STCP-Validation2
[Config TCP-STCP-Validation2]
network = tcpSTCPValidation2
tcpSTCPValidation2.ldelay = 37.5ms
#tcpValidation.delay = 25ms# ${1.25ms, 6.25ms, 12.5ms, 18.75ms, 25ms, 31.25ms, 37.5ms}
#**.ethg$o[*].channel.delay = 0.1s
#**.ppp[*].channel.delay = 0.1s
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 350000

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.routerCore.ppp[*].queueType = "DropTailQueue" # in routers
**.routerCore.ppp[*].queue.frameCapacity = 65
############################################################## Split-TCP-Validation
[Config Split-TCP-Validation]
network = tcpValidation

**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000
**.client3.tcp2.advertisedWindow = 65535
#**.client3.numTcpApps = 1
#**.client3.tcpApp[0].typename = "TCPSinkApp"
#**.client3.tcpApp[0].localPort = 1000

**.client1.numTcpApps = 1
**.client1.tcpApp[0].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerIng"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 1MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1000
**.routerEg.relay[0].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client3"
**.routerEg.ppp[1].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[1].queue.frameCapacity = 100
#
#**.routerEg.ppp[1].queueType = "DropTailQueue" # in routers
#**.routerEg.ppp[1].queue.frameCapacity = 20
#
**.routerCore.numRelayApps = 1
**.routerCore.relay[0].localPort = 1000
**.routerCore.relay[0].remotePort = 1000
**.routerCore.relay[0].remoteAddress = "routerEg"
**.routerCore.relay[0].reverse = true

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1000
**.routerIng.relay[0].remotePort = 1000
**.routerIng.relay[0].remoteAddress = "routerCore"

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535

############################################################## Split-TCP-Validation
[Config Split-TCP-Validation-Test]
network = tcpValidationTest
sim-time-limit = 12.0s

**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000
**.client3.numTcpApps = 0

**.client1.numTcpApps = 1
**.client1.tcpApp[0].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerIng"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 4MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "routerIng"
**.client2.tcpApp[0].connectPort = 1000
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 4MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1000
**.routerIng.relay[0].remotePort = 1000
**.routerIng.relay[0].remoteAddress = "client3"

**.routerIng.numTcp2Apps = 1
**.routerIng.tcp2App[0].typename = "TCPSessionApp"
**.routerIng.tcp2App[0].active = true
**.routerIng.tcp2App[0].localPort = -1
**.routerIng.tcp2App[0].connectAddress = "client3"
**.routerIng.tcp2App[0].connectPort = 1000
**.routerIng.tcp2App[0].tOpen = 1s
**.routerIng.tcp2App[0].tSend = 4s
**.routerIng.tcp2App[0].sendBytes = 4MiB
**.routerIng.tcp2App[0].sendScript = ""
**.routerIng.tcp2App[0].tClose = 0s

**.tcp.tcpAlgorithmClass = "TCPReno" 
**.tcp2.tcpAlgorithmClass = "TCPReno" 
**.tcp.sackSupport = true        
**.tcp.param5 = 0.01
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.param5 = 0.01

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 0.1
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "40"
**.routerIng.ppp[*].queue.red.maxps      = "0.5"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "0"
**.routerIng.ppp[*].queueframeCapacity = 1000

#**.ppp[*].queueType = "DropTailQueue"
#**.ppp[*].queue.frameCapacity = 40    # packets


[Config Split-TCP-Dumbbell-Validation-Test]
network = dumbbellAgg

dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.ppp[*].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[*].queue.frameCapacity = 180
**.routerEg.tcp2.param5 = 0.0

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
**.routerIng.ppp[*].queue.frameCapacity = 180#6, ,,, 175

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 180#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.param5 = 0.001
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.param5 = 0.01

[Config Split-TCP-Dumbbell-Test]
network = dumbbellAgg

dumbbellAgg.ldelay = ${37.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 175#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## Split-LGC-Validation
[Config Split-LGC-Validation-Test]
network = tcpValidationTest
sim-time-limit = 12.0s

**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000
#**.client3.numTcpApps = 1
#**.client3.tcpApp[0].typename = "TCPSinkApp"
#**.client3.tcpApp[0].localPort = 1000

**.client1.numTcpApps = 1
**.client1.tcpApp[0].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerIng"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 4MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "routerIng"
**.client2.tcpApp[0].connectPort = 1000
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 4MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1000
**.routerIng.relay[0].remotePort = 1000
**.routerIng.relay[0].remoteAddress = "client3"

**.routerIng.numTcp2Apps = 1
**.routerIng.tcp2App[0].typename = "TCPSessionApp"
**.routerIng.tcp2App[0].active = true
**.routerIng.tcp2App[0].localPort = -1
**.routerIng.tcp2App[0].connectAddress = "client3"
**.routerIng.tcp2App[0].connectPort = 1000
**.routerIng.tcp2App[0].tOpen = 1s
**.routerIng.tcp2App[0].tSend = 4s
**.routerIng.tcp2App[0].sendBytes = 4MiB
**.routerIng.tcp2App[0].sendScript = ""
**.routerIng.tcp2App[0].tClose = 0s

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 100Mbps
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 20Mbps

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "100"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"
**.routerIng.ppp[*].queueframeCapacity = 500

[Config Split-LGC-Dumbbell-Validation-Test]
network = dumbbellAgg

dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "200"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 500#6, ,,, 175

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 20Mbps
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 20Mbps
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000



############################################################## Split-TCP-Validation
[Config Split-TCP-Validation-Test-Rev]
network = tcpValidationTest

**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000
**.client3.tcp.advertisedWindow = 65535
#**.client3.numTcpApps = 1
#**.client3.tcpApp[0].typename = "TCPSinkApp"
#**.client3.tcpApp[0].localPort = 1000

**.client1.numTcp2Apps = 1
**.client1.tcp2App[0].typename = "TCPSessionApp"
**.client1.tcp2App[0].active = true
**.client1.tcp2App[0].localPort = -1
**.client1.tcp2App[0].connectAddress = "routerIng"
**.client1.tcp2App[0].connectPort = 1000
**.client1.tcp2App[0].tOpen = 1s
**.client1.tcp2App[0].tSend = 2s
**.client1.tcp2App[0].sendBytes = 10000B#1MiB
**.client1.tcp2App[0].sendScript = ""
**.client1.tcp2App[0].tClose = 0s

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1000
**.routerIng.relay[0].remotePort = 1000
**.routerIng.relay[0].remoteAddress = "client3"
**.routerIng.relay[0].reverse = true

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535

############################################################## Split-TCP-Validation-Short
[Config Split-TCP-Validation-Short]
network = tcpValidation
tcpValidation.ldelay = ${1.25ms, 6.25ms, 12.5ms, 18.75ms, 25ms, 31.25ms, 37.5ms}

**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000
#**.client3.tcp2.advertisedWindow = 65535

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerEg"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1000
**.routerEg.relay[0].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client3"
**.routerEg.ppp[1].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[1].queue.frameCapacity = 250

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535

############################################################## TCP-FO
[Config TCP-FO]
network = tcpsackFO
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000

**.client4.numTcpApps = 1
**.client4.tcpApp[0].typename = "TCPSinkApp"
**.client4.tcpApp[0].localPort = 1001

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "client4"
**.client2.tcpApp[0].connectPort = 1001
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 100MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

#**.tcpType = 
#**.tcp2.sackSupport = true

#**.routerEg.ppp[2].queueType = "REDQueue" # in routers
#**.routerEg.ppp[2].queue.red.wq        = 0.002
#**.routerEg.ppp[2].queue.red.maxp      = 0.1
#**.routerEg.ppp[2].queue.red.minth     = 20
#**.routerEg.ppp[2].queue.red.pkrate    = 8333.333
#**.routerEg.ppp[2].queue.frameCapacity = 40
#**.routerEg.ppp[2].queue.red.maxth     = 40

**.routerEg.ppp[2].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[2].queue.frameCapacity = 20


[Config TCP-PF]
network = tcpsackPF
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000

**.client4.numTcpApps = 1
**.client4.tcpApp[0].typename = "TCPSinkApp"
**.client4.tcpApp[0].localPort = 1001

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "client4"
**.client2.tcpApp[0].connectPort = 1001
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 100MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerCore.ppp[*].queueType = "DropTailQueue" # in routers
**.routerCore.ppp[*].queue.frameCapacity = 63  # in routers
  
**.numPcapRecorders = 1

[Config TCP-FI]
network = tcpsackFI
## tcp apps
**.client3.numTcpApps = 1
**.client3.tcpApp[0].typename = "TCPSinkApp"
**.client3.tcpApp[0].localPort = 1000

**.client4.numTcpApps = 1
**.client4.tcpApp[0].typename = "TCPSinkApp"
**.client4.tcpApp[0].localPort = 1001

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "client3"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "client4"
**.client2.tcpApp[0].connectPort = 1001
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 100MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerCore.ppp[*].queueType = "DropTailQueue" # in routers
**.routerCore.ppp[*].queue.frameCapacity = 20  # in routers
  
**.numPcapRecorders = 1

[Config SplitTCP-PF]
network = tcpsackPF
## tcp apps
**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000

**.client4.numTcp2Apps = 1
**.client4.tcp2App[0].typename = "TCPSinkApp"
**.client4.tcp2App[0].localPort = 1000

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerCore"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "routerCore"
**.client2.tcpApp[0].connectPort = 1001
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 100MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerCore.numRelayApps = 2
**.routerCore.relay[0].localPort = 1000
**.routerCore.relay[1].localPort = 1001
**.routerCore.relay[0].remotePort = 1000
**.routerCore.relay[1].remotePort = 1000
**.routerCore.relay[0].remoteAddress = "client3"
**.routerCore.relay[1].remoteAddress = "client4"



[Config SplitTCP-FO]
network = tcpsackFO
## tcp apps
**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000

**.client4.numTcp2Apps = 1
**.client4.tcp2App[0].typename = "TCPSinkApp"
**.client4.tcp2App[0].localPort = 1000

**.client1.numTcpApps = 1
**.client1.tcpApp[*].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerEg"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 100MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "routerEg"
**.client2.tcpApp[0].connectPort = 1001
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 100MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 2
**.routerEg.relay[0].localPort = 1000
**.routerEg.relay[1].localPort = 1001
**.routerEg.relay[0].remotePort = 1000
**.routerEg.relay[1].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client3"
**.routerEg.relay[1].remoteAddress = "client4"
############################################################## Split-TCP-Dumbbell
[Config Split-TCP-Dumbbell]
network = dumbbellAgg

dumbbellAgg.ldelay = ${1.25ms, 6.25ms, 12.5ms, 18.75ms, 25ms, 31.25ms, 37.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000
**.client2*.tcp.advertisedWindow = 65535
#**.client3.numTcpApps = 1
#**.client3.tcpApp[0].typename = "TCPSinkApp"
#**.client3.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.ppp[*].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[*].queue.frameCapacity = 100

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.ppp[5].queueType = "DropTailQueue" # in routers
**.routerIng.ppp[5].queue.frameCapacity = 175#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535

