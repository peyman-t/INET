[General]


parallel-simulation = false
warnings = true
sim-time-limit = 62.0s

cmdenv-module-messages = true # for normal (non-express) mode only
cmdenv-event-banners = true   # for normal (non-express) mode only

tkenv-plugin-path = ../../../etc/plugins

#
# Network specific settings
#

# set inet_addr, Mask, MTU ( = 1500), default route (=router)
#**.client.routingFile = "client.mrt"
#**.router.routingFile = "router.mrt"
#**.server.routingFile = "server.mrt"

# ip settings
**.ip.procDelay = 0s
**.IPForward = false

# hookType settings
**.ppp[*].numOutputHooks = 1
**.ppp[*].outputHook[0].typename = "OrdinalBasedDropper" # Nop | ThruputMeter | OrdinalBasedDropper | OrdinalBasedDuplicator

# ARP settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s

# NIC settings
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 200    # packets

**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = true                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.advertisedWindow = 9553500
**.tcp.recordStats = true
**.tcp.mss = 1460

**.tcp2.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp2.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp2.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp2.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.windowScalingSupport = true                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp2.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp2.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.advertisedWindow = 9553500
**.tcp2.recordStats = true
**.tcp2.mss = 1460

############################################################## EndToEnd-TCP
[Config EndToEnd-TCP]
network = dumbbellAgg

#dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

#**.routerEg.numTcpApps = 1
#**.routerEg.tcpApp[0].typename = "TCPSinkApp"
#**.routerEg.tcpApp[0].localPort = 1002
#
#**.routerIng.numTcpApps = 8
#**.routerIng.tcpApp[*].typename = "TCPSessionApp"
#**.routerIng.tcpApp[*].active = true
#**.routerIng.tcpApp[*].localPort = -1
#**.routerIng.tcpApp[*].connectAddress = "routerEg"
#**.routerIng.tcpApp[*].connectPort = 1002
#**.routerIng.tcpApp[*].tOpen = 1s
#**.routerIng.tcpApp[*].tSend = 2s
#**.routerIng.tcpApp[*].sendBytes = 2MiB
#**.routerIng.tcpApp[*].sendScript = ""
#**.routerIng.tcpApp[*].tClose = 0s
#**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
#**.routerIng.ppp[*].queue.frameCapacity = 100#6, ,,, 175

#**.routerIng.ppp[5].ppp.tLow = 10s
#**.routerIng.ppp[5].ppp.tNormal = 15s
#**.routerIng.ppp[5].ppp.lowDatarate = 1Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"10\" end=\"15\" speed=\"1000000\" /></rate>")

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 100#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000
**.tcp.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)



############################################################## EndToEnd-TCP
[Config EndToEnd-TCP-1]
network = dumbbellAgg
sim-time-limit = 32.0s
dumbbellAgg.ldatarate = 100Mbps 
dumbbellAgg.mdatarate = 50Mbps 

#dumbbellAgg.ldelay = ${36.5ms}

**.client21.numTcpApps = 1
**.client21.tcpApp[0].typename = "TCPSinkApp"
**.client21.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].tOpen = 1s
**.client11.tcpApp[0].tSend = 2s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

#**.routerEg.numTcpApps = 1
#**.routerEg.tcpApp[0].typename = "TCPSinkApp"
#**.routerEg.tcpApp[0].localPort = 1002
#
#**.routerIng.numTcpApps = 8
#**.routerIng.tcpApp[*].typename = "TCPSessionApp"
#**.routerIng.tcpApp[*].active = true
#**.routerIng.tcpApp[*].localPort = -1
#**.routerIng.tcpApp[*].connectAddress = "routerEg"
#**.routerIng.tcpApp[*].connectPort = 1002
#**.routerIng.tcpApp[*].tOpen = 1s
#**.routerIng.tcpApp[*].tSend = 2s
#**.routerIng.tcpApp[*].sendBytes = 2MiB
#**.routerIng.tcpApp[*].sendScript = ""
#**.routerIng.tcpApp[*].tClose = 0s
#**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
#**.routerIng.ppp[*].queue.frameCapacity = 100#6, ,,, 175

#**.routerIng.ppp[5].ppp.tLow = 10s
#**.routerIng.ppp[5].ppp.tNormal = 15s
#**.routerIng.ppp[5].ppp.lowDatarate = 10Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"10\" end=\"15\" speed=\"10000000\" /></rate>")

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 250#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


############################################################## EndToEnd-DCTCP
[Config EndToEnd-DCTCP-1]
network = chain
sim-time-limit = 5.0s
chain.ldelay = 0.001s 
chain.ldatarate = 600Mbps#1Gbps 
chain.mdatarate = 500Mbps#1Gbps 

#dumbbellAgg.ldelay = ${36.5ms}

**.client21.numTcpApps = 1
**.client21.tcpApp[0].typename = "TCPSinkApp"
**.client21.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

#**.routerEg.numTcpApps = 1
#**.routerEg.tcpApp[0].typename = "TCPSinkApp"
#**.routerEg.tcpApp[0].localPort = 1002
#
#**.routerIng.numTcpApps = 8
#**.routerIng.tcpApp[*].typename = "TCPSessionApp"
#**.routerIng.tcpApp[*].active = true
#**.routerIng.tcpApp[*].localPort = -1
#**.routerIng.tcpApp[*].connectAddress = "routerEg"
#**.routerIng.tcpApp[*].connectPort = 1002
#**.routerIng.tcpApp[*].tOpen = 1s
#**.routerIng.tcpApp[*].tSend = 2s
#**.routerIng.tcpApp[*].sendBytes = 2MiB
#**.routerIng.tcpApp[*].sendScript = ""
#**.routerIng.tcpApp[*].tClose = 0s
#**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
#**.routerIng.ppp[*].queue.frameCapacity = 100#6, ,,, 175

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

**.routerEg.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerEg.ppp[*].queue.red.wq        = 1.0
**.routerEg.ppp[*].queue.red.minths     = "35"
**.routerEg.ppp[*].queue.red.maxths     = "36"
**.routerEg.ppp[*].queue.red.maxps      = "1.0"
**.routerEg.ppp[*].queue.red.pkrates    = "1.0"
**.routerEg.ppp[*].queue.red.marks = "1"
**.routerEg.ppp[*].queueframeCapacity = 500

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175


**.tcp.tcpAlgorithmClass = "DCTCP"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.tcpAlgorithmClass = "DCTCP"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000
**.tcp.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)



############################################################## EndToEnd-DCTCP
[Config EndToEnd-DCTCP]
network = dumbbellAgg
sim-time-limit = 40.0s
dumbbellAgg.ldatarate = 100Mbps 
dumbbellAgg.mdatarate = 50Mbps 

#dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].tOpen = 0s
**.client1*.tcpApp[0].tSend = 0s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

#**.routerEg.numTcpApps = 1
#**.routerEg.tcpApp[0].typename = "TCPSinkApp"
#**.routerEg.tcpApp[0].localPort = 1002
#
#**.routerIng.numTcpApps = 8
#**.routerIng.tcpApp[*].typename = "TCPSessionApp"
#**.routerIng.tcpApp[*].active = true
#**.routerIng.tcpApp[*].localPort = -1
#**.routerIng.tcpApp[*].connectAddress = "routerEg"
#**.routerIng.tcpApp[*].connectPort = 1002
#**.routerIng.tcpApp[*].tOpen = 1s
#**.routerIng.tcpApp[*].tSend = 2s
#**.routerIng.tcpApp[*].sendBytes = 2MiB
#**.routerIng.tcpApp[*].sendScript = ""
#**.routerIng.tcpApp[*].tClose = 0s
#**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
#**.routerIng.ppp[*].queue.frameCapacity = 100#6, ,,, 175

#**.routerIng.ppp[5].ppp.tLow = 15s
#**.routerIng.ppp[5].ppp.tNormal = 20s
#**.routerIng.ppp[5].ppp.lowDatarate = 10Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"15\" end=\"20\" speed=\"10000000\" /></rate>")

**.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.ppp[*].queue.red.wq        = 1.0
**.ppp[*].queue.red.minths     = "35"
**.ppp[*].queue.red.maxths     = "36"
**.ppp[*].queue.red.maxps      = "1.0"
**.ppp[*].queue.red.pkrates    = "1.0"
**.ppp[*].queue.red.marks = "1"
**.ppp[*].queueframeCapacity = 500



**.tcp.tcpAlgorithmClass = "DCTCP"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.tcpAlgorithmClass = "DCTCP"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000
**.tcp.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)




############################################################## EndToEnd-LGC
[Config EndToEnd-LGC]
network = dumbbellAgg
sim-time-limit = 42.0s

dumbbellAgg.ldatarate = 100Mbps 
dumbbellAgg.mdatarate = 50Mbps 


**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "2"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 2
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 2

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 50Mbps
**.tcp.lpacing = true
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 50Mbps
**.tcp2.lpacing = true
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000


############################################################## EndToEnd-LGC
[Config EndToEnd-LGC-1]
network = chain
sim-time-limit = 5.0s
chain.ldelay = 0.001s 
chain.ldatarate = 505Mbps#1Gbps 
chain.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s


#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")


**.routerEg.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerEg.ppp[*].queue.red.wq        = 1.0
**.routerEg.ppp[*].queue.red.minths     = "1"
**.routerEg.ppp[*].queue.red.maxths     = "60"
**.routerEg.ppp[*].queue.red.maxps      = "1.0"
**.routerEg.ppp[*].queue.red.pkrates    = "1.0"
**.routerEg.ppp[*].queue.red.marks = "1"
**.routerEg.ppp[*].queueframeCapacity = 500

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 10
**.tcp.lgccAdaptiveR = false
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 10
**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000


############################################################## ABC
[Config ABC]
network = chain
sim-time-limit = 5.0s
chain.ldelay = 0.001s 
chain.ldatarate = 520Mbps#1Gbps 
chain.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s


#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

**.routerEg.ppp[*].queueType           = "ABCQueue"
**.routerEg.ppp[*].queue.interval      = 0.001
**.routerEg.ppp[*].queue.delayThreshlod = 0.0001
**.routerEg.ppp[*].queue.delta         = 0.03
**.routerEg.ppp[*].queue.no     = 1
**.routerEg.ppp[*].queue.frameCapacity = 1000

#**.ppp[*].queueType           = "ABCQueue"
#**.ppp[*].queue.interval      = 0.001
#**.ppp[*].queue.delayThreshlod = 0.0001
#**.ppp[*].queue.delta         = 0.06
#**.ppp[*].queue.frameCapacity = 1000
#
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000


############################################################## ABC
[Config ABC1-Cellular]
network = chain
sim-time-limit = 929s #120.0s, 787s, 475s, 140s, 929s, 140s
chain.ldelay = 0.017s 
chain.ldatarate = 60Mbps#1Gbps 
chain.mdatarate = 50Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s


#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = ${xmldoc("ATT-LTE-driving-2016.xml"),xmldoc("ATT-LTE-driving.xml"),xmldoc("TMobile-LTE-driving.xml"),xmldoc("TMobile-LTE-short.xml"),xmldoc("TMobile-UMTS-driving.xml"),xmldoc("Verizon-LTE-short.xml")}

**.routerEg.ppp[*].queueType           = "ABCQueue"
**.routerEg.ppp[*].queue.interval      = 0.017
**.routerEg.ppp[*].queue.delayThreshlod = 0.01
**.routerEg.ppp[*].queue.delta         = 0.3
**.routerEg.ppp[*].queue.no     = 1
**.routerEg.ppp[*].queue.frameCapacity = 10000

#**.ppp[*].queueType           = "ABCQueue"
#**.ppp[*].queue.interval      = 0.001
#**.ppp[*].queue.delayThreshlod = 0.0001
#**.ppp[*].queue.delta         = 0.06
#**.ppp[*].queue.frameCapacity = 1000
#
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10000#6, ,,, 175

**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000


############################################################## ABC
[Config ABC1-5g]
network = chainLong
sim-time-limit = 100s #120.0s, 787s, 475s, 140s, 929s, 140s
chainLong.ldelay = 0.005s 
chainLong.ldatarate = 500Mbps#1Gbps 
chainLong.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 10000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s


#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps


#**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}
#
#**.router5.ppp[1].queueType           = "ABCQueue"
#**.router5.ppp[1].queue.interval      = 0.025
#**.router5.ppp[1].queue.delayThreshlod = 0.001
#**.router5.ppp[1].queue.delta         = 0.3
#**.router5.ppp[1].queue.no     = 1
#**.router5.ppp[1].queue.frameCapacity = 10000

#**.ppp[*].queueType           = "ABCQueue"
#**.ppp[*].queue.interval      = 0.001
#**.ppp[*].queue.delayThreshlod = 0.0001
#**.ppp[*].queue.delta         = 0.06
#**.ppp[*].queue.frameCapacity = 1000
#
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10000#6, ,,, 175

**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

[Config ABC1-5g-R1]
extends = ABC1-5g
sim-time-limit = 100s

**.router1.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.router1.ppp[1].queueType           = "ABCQueue"
**.router1.ppp[1].queue.interval      = 0.025
**.router1.ppp[1].queue.delayThreshlod = 0.001
**.router1.ppp[1].queue.delta         = 0.3
**.router1.ppp[1].queue.no     = 1
**.router1.ppp[1].queue.frameCapacity = 10000

[Config ABC1-5g-C11]
extends = ABC1-5g
sim-time-limit = 100s

**.client11.ppp[0].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.client11.ppp[0].queueType           = "ABCQueue"
**.client11.ppp[0].queue.interval      = 0.025
**.client11.ppp[0].queue.delayThreshlod = 0.001
**.client11.ppp[0].queue.delta         = 0.3
**.client11.ppp[0].queue.no     = 1
**.client11.ppp[0].queue.frameCapacity = 10000


[Config ABC1-5g-C11-R5]
extends = ABC1-5g
sim-time-limit = 100s

**.client11.ppp[0].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.client11.ppp[0].queueType           = "ABCQueue"
**.client11.ppp[0].queue.interval      = 0.025
**.client11.ppp[0].queue.delayThreshlod = 0.001
**.client11.ppp[0].queue.delta         = 0.3
**.client11.ppp[0].queue.no     = 1
**.client11.ppp[0].queue.frameCapacity = 10000

**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.router5.ppp[1].queueType           = "ABCQueue"
**.router5.ppp[1].queue.interval      = 0.025
**.router5.ppp[1].queue.delayThreshlod = 0.001
**.router5.ppp[1].queue.delta         = 0.3
**.router5.ppp[1].queue.no     = 1
**.router5.ppp[1].queue.frameCapacity = 10000


############################################################## Chained-LGC-Comparison
[Config LGCC1-5g]
network = chainLong
sim-time-limit = 100s #120.0s, 787s, 475s, 140s, 929s, 140s
chainLong.ldelay = 0.005s 
chainLong.ldatarate = 500Mbps#1Gbps 
chainLong.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcp2Apps = 1
**.client2*.tcp2App[0].typename = "TCPSinkApp"
**.client2*.tcp2App[0].localPort = 1001
**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1001

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectPort = 1001
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 100000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

#**.router5.numRelayApps = 1
#**.router5.relay[0].localPort = 1001
#**.router5.relay[*].remotePort = 1000
#**.router5.relay[0].remoteAddress = "client21"
#**.router5.relay[*].reverse = false
#**.router5.relay[*].sendQueueThreshold = 31250000
#**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

#**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
#**.router5.relay[*].dataTransferMode = "bytecount" #"bytestream"
#**.router5.relay[*].dataTransferMode2 = "object" #"bytestream"
#**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

#**.router*.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
#**.router*.ppp[*].queue.red.wq        = 1.0
#**.router*.ppp[*].queue.red.minths     = "0"
#**.router*.ppp[*].queue.red.maxths     = "200"
#**.router*.ppp[*].queue.red.maxps      = "1.0"
#**.router*.ppp[*].queue.red.pkrates    = "1666.0"
#**.router*.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5
**.tcp.lgccAdaptiveR = false
**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

[Config LGCC1-5g-C11-R5]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router1"

**.router1.numRelayApps = 1
**.router1.relay[0].localPort = 1001
**.router1.relay[*].remotePort = 1001
**.router1.relay[0].remoteAddress = "router5"
**.router1.relay[*].reverse = false
**.router1.relay[*].sendQueueThreshold = 850000
**.client11.ppp[0].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.router5.numRelayApps = 1
**.router5.relay[0].localPort = 1001
**.router5.relay[0].remotePort = 1001
**.router5.relay[0].remoteAddress = "client21"
**.router5.relay[0].reverse = true
**.router5.relay[0].sendQueueThreshold = 2450000
**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode2 = "object" #"bytestream"
**.router5.relay[*].dataTransferMode = "object" #"bytestream"
**.router5.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

[Config LGCC1-5g-3Loops]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router1"

**.router1.numRelayApps = 1
**.router1.relay[0].localPort = 1001
**.router1.relay[*].remotePort = 1001
**.router1.relay[0].remoteAddress = "router5"
**.router1.relay[*].reverse = false
**.router1.relay[*].sendQueueThreshold = 850000

**.router5.numRelayApps = 1
**.router5.relay[0].localPort = 1001
**.router5.relay[0].remotePort = 1001
**.router5.relay[0].remoteAddress = "client21"
**.router5.relay[0].reverse = true
**.router5.relay[0].sendQueueThreshold = 2450000
**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode2 = "object" #"bytestream"
**.router5.relay[*].dataTransferMode = "object" #"bytestream"
**.router5.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

[Config LGCC1-5g-4Loops]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router1"

**.router*.numRelayApps = 1
**.router*.relay[0].localPort = 1001
**.router*.relay[0].remotePort = 1001
**.router*.relay[0].sendQueueThreshold = 850000
**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.router5.relay[0].remoteAddress = "client21"
**.router5.relay[0].reverse = false
**.router3.relay[0].remoteAddress = "router5"
**.router3.relay[0].reverse = true
**.router1.relay[0].remoteAddress = "router3"
**.router1.relay[0].reverse = false

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode2 = "object" #"bytestream"
**.router*.relay[*].dataTransferMode = "object" #"bytestream"
**.router*.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"




[Config LGCC1-5g-R5]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router5"

**.router5.numRelayApps = 1
**.router5.relay[0].localPort = 1001
**.router5.relay[0].remotePort = 1001
**.router5.relay[0].remoteAddress = "client21"
**.router5.relay[0].reverse = false
**.router5.relay[0].sendQueueThreshold = 850000
**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router5.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router5.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

[Config LGCC1-5g-C11]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router1"

**.router1.numRelayApps = 1
**.router1.relay[0].localPort = 1001
**.router1.relay[*].remotePort = 1001
**.router1.relay[0].remoteAddress = "client21"
**.router1.relay[*].reverse = false
**.router1.relay[*].sendQueueThreshold = 31250000
**.client11.ppp[0].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"


[Config LGCC1-5g-R15]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router1"

**.router*.numRelayApps = 1
**.router*.relay[0].localPort = 1001
**.router*.relay[0].remotePort = 1001
**.router*.relay[0].sendQueueThreshold = 850000 #3125000
**.router5.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.router5.relay[0].remoteAddress = "client21"
**.router5.relay[0].reverse = false
**.router4.relay[0].remoteAddress = "router5"
**.router4.relay[0].reverse = true
**.router3.relay[0].remoteAddress = "router4"
**.router3.relay[0].reverse = false
**.router2.relay[0].remoteAddress = "router3"
**.router2.relay[0].reverse = true
**.router1.relay[0].remoteAddress = "router2"
**.router1.relay[0].reverse = false

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode2 = "object" #"bytestream"
**.router*.relay[*].dataTransferMode = "object" #"bytestream"
**.router*.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

[Config LGCC1-5g-R15-R1]
extends = LGCC1-5g
sim-time-limit = 100s

**.client11.tcpApp[0].connectAddress = "router1"

**.router*.numRelayApps = 1
**.router*.relay[0].localPort = 1001
**.router*.relay[0].remotePort = 1001
**.router*.relay[0].sendQueueThreshold = 31250000
**.router1.ppp[1].ppp.rateConfig = ${xmldoc("B_2019.12.16_13.40.04.xml"),xmldoc("B_2020.01.16_10.43.34.xml"),xmldoc("B_2020.02.13_13.57.29.xml"),xmldoc("B_2020.02.14_13.21.26.xml"),xmldoc("B_2020.02.27_18.39.27.xml")}

**.router5.relay[0].remoteAddress = "client21"
**.router5.relay[0].reverse = false
**.router4.relay[0].remoteAddress = "router5"
**.router4.relay[0].reverse = true
**.router3.relay[0].remoteAddress = "router4"
**.router3.relay[0].reverse = false
**.router2.relay[0].remoteAddress = "router3"
**.router2.relay[0].reverse = true
**.router1.relay[0].remoteAddress = "router2"
**.router1.relay[0].reverse = false

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.router1.relay[*].dataTransferMode2 = "object" #"bytestream"
**.router*.relay[*].dataTransferMode = "object" #"bytestream"
**.router*.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"



############################################################## ABC
[Config ABC5-Cellular]
network = chain5
sim-time-limit = 140s #120s, 787s, 475s, 140s, 929s, 140s
chain5.ldelay = 0.017s 
chain5.ldatarate = 50Mbps#1Gbps 
chain5.mdatarate = 50Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "client21"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 0s
**.client13.tcpApp[0].tSend = 1000s
**.client14.tcpApp[0].tSend = 1000s
**.client15.tcpApp[0].tSend = 1000s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s


#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = ${xmldoc("ATT-LTE-driving-2016.xml"),xmldoc("ATT-LTE-driving.xml"),xmldoc("TMobile-LTE-driving.xml"),xmldoc("TMobile-LTE-short.xml"),xmldoc("TMobile-UMTS-driving.xml"),xmldoc("Verizon-LTE-short.xml")}

**.routerEg.ppp[*].queueType           = "ABCQueue"
**.routerEg.ppp[*].queue.interval      = 0.017
**.routerEg.ppp[*].queue.delayThreshlod = 0.01
**.routerEg.ppp[*].queue.delta         = 0.3
**.routerEg.ppp[*].queue.no     = 1
**.routerEg.ppp[*].queue.frameCapacity = 10000

#**.ppp[*].queueType           = "ABCQueue"
#**.ppp[*].queue.interval      = 0.001
#**.ppp[*].queue.delayThreshlod = 0.0001
#**.ppp[*].queue.delta         = 0.06
#**.ppp[*].queue.frameCapacity = 1000
#
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10000#6, ,,, 175

**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000


############################################################## EndToEnd-LGC
[Config ABC5]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 


**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 0s
**.client1*.tcpApp[0].tSend = 0s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerIng.ppp[*].queueType           = "ABCQueue"
#**.routerIng.ppp[*].queue.interval      = 0.006
#**.routerIng.ppp[*].queue.delta         = 0.03
#**.routerIng.ppp[*].queue.no             = 0.98
#**.routerIng.ppp[*].queueframeCapacity = 1000
#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

**.routerIng.ppp[5].queueType           = "ABCQueue"
**.routerIng.ppp[5].queue.interval      = 0.0025
**.routerIng.ppp[5].queue.delayThreshlod = 0.0001
**.routerIng.ppp[5].queue.delta         = 0.025
**.routerIng.ppp[5].queue.no     = 1
**.routerIng.ppp[5].queue.frameCapacity = 1000

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets


**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## EndToEnd-LGC
[Config ABC5-Rnd]
network = dumbbellAgg
sim-time-limit = 5.0s
seed-set=${0, 1, 2, 3, 4, 5, 6, 7, 8, 9}

dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 


**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client12.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client13.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client14.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client15.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerIng.ppp[*].queueType           = "ABCQueue"
#**.routerIng.ppp[*].queue.interval      = 0.006
#**.routerIng.ppp[*].queue.delta         = 0.03
#**.routerIng.ppp[*].queue.no             = 0.98
#**.routerIng.ppp[*].queueframeCapacity = 1000
#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

**.routerIng.ppp[5].queueType           = "ABCQueue"
**.routerIng.ppp[5].queue.interval      = 0.0015
**.routerIng.ppp[5].queue.delayThreshlod = 0.0001
**.routerIng.ppp[5].queue.delta         = 0.025
**.routerIng.ppp[5].queue.no     = 1
**.routerIng.ppp[5].queue.frameCapacity = 1000

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets


**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## EndToEnd-LGC
[Config ABC5-1-1]
network = dumbbellAgg
sim-time-limit = 20.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 600Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 


**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 2s
**.client13.tcpApp[0].tSend = 4s
**.client14.tcpApp[0].tSend = 6s
**.client15.tcpApp[0].tSend = 8s
**.client11.tcpApp[0].sendBytes = 500MiB#300MiB
**.client12.tcpApp[0].sendBytes = 500MiB#179MiB
**.client13.tcpApp[0].sendBytes = 500MiB#185MiB
**.client14.tcpApp[0].sendBytes = 500MiB#190MiB
**.client15.tcpApp[0].sendBytes = 500MiB#300MiB
**.client1*.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 12s
**.client12.tcpApp[0].tClose = 14s
**.client13.tcpApp[0].tClose = 16s
**.client14.tcpApp[0].tClose = 18s
**.client15.tcpApp[0].tClose = 20s

**.client11.tcp.param3 = 12
**.client12.tcp.param3 = 14
**.client13.tcp.param3 = 16
**.client14.tcp.param3 = 18
**.client15.tcp.param3 = 20

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerIng.ppp[*].queueType           = "ABCQueue"
#**.routerIng.ppp[*].queue.interval      = 0.006
#**.routerIng.ppp[*].queue.delta         = 0.03
#**.routerIng.ppp[*].queue.no             = 0.98
#**.routerIng.ppp[*].queueframeCapacity = 1000
#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps

**.routerIng.ppp[5].queueType           = "ABCQueue"
**.routerIng.ppp[5].queue.interval      = 0.001
**.routerIng.ppp[5].queue.delayThreshlod = 0.0001
**.routerIng.ppp[5].queue.delta         = 0.03
**.routerIng.ppp[5].queue.no     = 1
**.routerIng.ppp[5].queue.frameCapacity = 1000

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets


**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## EndToEnd-LGC
[Config ABC5-1-2]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 600Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 


**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 1s
**.client13.tcpApp[0].tSend = 10s
**.client14.tcpApp[0].tSend = 10s
**.client15.tcpApp[0].tSend = 10s
**.client11.tcpApp[0].sendBytes = 500MiB#300MiB
**.client12.tcpApp[0].sendBytes = 500MiB#179MiB
**.client13.tcpApp[0].sendBytes = 500MiB#185MiB
**.client14.tcpApp[0].sendBytes = 500MiB#190MiB
**.client15.tcpApp[0].sendBytes = 500MiB#300MiB
**.client1*.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 12s
**.client12.tcpApp[0].tClose = 14s
**.client13.tcpApp[0].tClose = 16s
**.client14.tcpApp[0].tClose = 18s
**.client15.tcpApp[0].tClose = 20s

**.client11.tcp.param3 = 12
**.client12.tcp.param3 = 14
**.client13.tcp.param3 = 16
**.client14.tcp.param3 = 18
**.client15.tcp.param3 = 20

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerIng.ppp[*].queueType           = "ABCQueue"
#**.routerIng.ppp[*].queue.interval      = 0.006
#**.routerIng.ppp[*].queue.delta         = 0.03
#**.routerIng.ppp[*].queue.no             = 0.98
#**.routerIng.ppp[*].queueframeCapacity = 1000
#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps

**.routerIng.ppp[5].queueType           = "ABCQueue"
**.routerIng.ppp[5].queue.interval      = 0.001
**.routerIng.ppp[5].queue.delayThreshlod = 0.0001
**.routerIng.ppp[5].queue.delta         = 0.03
**.routerIng.ppp[5].queue.no     = 1
**.routerIng.ppp[5].queue.frameCapacity = 1000

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets


**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## EndToEnd-LGC
[Config ABC5-1-1-Rnd]
network = dumbbellAgg
sim-time-limit = 20.0s
seed-set=${0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 600Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 


**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client12.tcpApp[0].connectAddress = "client22"
**.client13.tcpApp[0].connectAddress = "client23"
**.client14.tcpApp[0].connectAddress = "client24"
**.client15.tcpApp[0].connectAddress = "client25"
**.client1*.tcpApp[0].connectPort = 1000
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client12.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 2s
**.client13.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 4s
**.client14.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 6s
**.client15.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 8s
**.client11.tcpApp[0].sendBytes = 500MiB#300MiB
**.client12.tcpApp[0].sendBytes = 500MiB#179MiB
**.client13.tcpApp[0].sendBytes = 500MiB#185MiB
**.client14.tcpApp[0].sendBytes = 500MiB#190MiB
**.client15.tcpApp[0].sendBytes = 500MiB#300MiB
**.client1*.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 12s
**.client12.tcpApp[0].tClose = 14s
**.client13.tcpApp[0].tClose = 16s
**.client14.tcpApp[0].tClose = 18s
**.client15.tcpApp[0].tClose = 20s

**.client11.tcp.param3 = 12
**.client12.tcp.param3 = 14
**.client13.tcp.param3 = 16
**.client14.tcp.param3 = 18
**.client15.tcp.param3 = 20

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

#**.routerIng.ppp[*].queueType           = "ABCQueue"
#**.routerIng.ppp[*].queue.interval      = 0.006
#**.routerIng.ppp[*].queue.delta         = 0.03
#**.routerIng.ppp[*].queue.no             = 0.98
#**.routerIng.ppp[*].queueframeCapacity = 1000
#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps

**.routerIng.ppp[5].queueType           = "ABCQueue"
**.routerIng.ppp[5].queue.interval      = 0.001
**.routerIng.ppp[5].queue.delayThreshlod = 0.0001
**.routerIng.ppp[5].queue.delta         = 0.03
**.routerIng.ppp[5].queue.no     = 1
**.routerIng.ppp[5].queue.frameCapacity = 1000

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets


**.tcp.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "ABC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## EndToEnd-LGC
[Config EndToEnd-LGC-2]
network = dumbbellAgg
sim-time-limit = 32.0s
dumbbellAgg.ldatarate = 100Mbps 
dumbbellAgg.mdatarate = 50Mbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "client21"
**.client11.tcpApp[0].connectPort = 1000
**.client11.tcpApp[0].tOpen = 1s
**.client11.tcpApp[0].tSend = 2s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

**.client12.numTcpApps = 1
**.client12.tcpApp[0].typename = "TCPSessionApp"
**.client12.tcpApp[0].active = true
**.client12.tcpApp[0].localPort = -1
**.client12.tcpApp[0].connectAddress = "client22"
**.client12.tcpApp[0].connectPort = 1000
**.client12.tcpApp[0].tOpen = 1s
**.client12.tcpApp[0].tSend = 2s
**.client12.tcpApp[0].sendBytes = 1000MiB
**.client12.tcpApp[0].sendScript = ""
**.client12.tcpApp[0].tClose = 0s

#**.client11.ppp[0].ppp.tLow = 10s
#**.client11.ppp[0].ppp.tNormal = 15s
#**.client11.ppp[0].ppp.lowDatarate = 1Mbps

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "2"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.numPcapRecorders = 1
**.ppp[*].queueType = "DropTailQueue"
**.ppp[*].queue.frameCapacity = 1666    # packets

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 2
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 2

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 50Mbps
**.tcp.lpacing = true
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 50Mbps
**.tcp2.lpacing = true
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000


############################################################## Chained-TCP
[Config Chained-TCP]
network = dumbbellAgg

dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 200000
**.routerEg.ppp[*].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[*].queue.frameCapacity = 180
**.routerEg.tcp2.param5 = 0.0

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 200000
**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
**.routerIng.ppp[*].queue.frameCapacity = 180#6, ,,, 175

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 180#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.param5 = 0.001
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.param5 = 0.01


############################################################## Split-LGC-Validation-Test
[Config Split-LGC-Validation-Test]
network = dumbbellAgg
sim-time-limit = 12.0s

**.client3.numTcp2Apps = 1
**.client3.tcp2App[0].typename = "TCPSinkApp"
**.client3.tcp2App[0].localPort = 1000
#**.client3.numTcpApps = 1
#**.client3.tcpApp[0].typename = "TCPSinkApp"
#**.client3.tcpApp[0].localPort = 1000

**.client1.numTcpApps = 1
**.client1.tcpApp[0].typename = "TCPSessionApp"
**.client1.tcpApp[0].active = true
**.client1.tcpApp[0].localPort = -1
**.client1.tcpApp[0].connectAddress = "routerIng"
**.client1.tcpApp[0].connectPort = 1000
**.client1.tcpApp[0].tOpen = 1s
**.client1.tcpApp[0].tSend = 2s
**.client1.tcpApp[0].sendBytes = 4MiB
**.client1.tcpApp[0].sendScript = ""
**.client1.tcpApp[0].tClose = 0s

**.client2.numTcpApps = 1
**.client2.tcpApp[*].typename = "TCPSessionApp"
**.client2.tcpApp[0].active = true
**.client2.tcpApp[0].localPort = -1
**.client2.tcpApp[0].connectAddress = "routerIng"
**.client2.tcpApp[0].connectPort = 1000
**.client2.tcpApp[0].tOpen = 1s
**.client2.tcpApp[0].tSend = 2s
**.client2.tcpApp[0].sendBytes = 4MiB
**.client2.tcpApp[0].sendScript = ""
**.client2.tcpApp[0].tClose = 0s

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1000
**.routerIng.relay[0].remotePort = 1000
**.routerIng.relay[0].remoteAddress = "client3"

**.routerIng.numTcp2Apps = 1
**.routerIng.tcp2App[0].typename = "TCPSessionApp"
**.routerIng.tcp2App[0].active = true
**.routerIng.tcp2App[0].localPort = -1
**.routerIng.tcp2App[0].connectAddress = "client3"
**.routerIng.tcp2App[0].connectPort = 1000
**.routerIng.tcp2App[0].tOpen = 1s
**.routerIng.tcp2App[0].tSend = 4s
**.routerIng.tcp2App[0].sendBytes = 4MiB
**.routerIng.tcp2App[0].sendScript = ""
**.routerIng.tcp2App[0].tClose = 0s

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 100Mbps
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 20Mbps

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "100"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"
**.routerIng.ppp[*].queueframeCapacity = 500


############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 0s
**.client1*.tcpApp[0].tSend = 0s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 25000

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 25000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "30"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 6
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 6

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison-Step-Cap]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 0s
**.client1*.tcpApp[0].tSend = 0s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 25000

#**.routerIng.ppp[5].ppp.tLow = 1s
#**.routerIng.ppp[5].ppp.tNormal = 2s
#**.routerIng.ppp[5].ppp.lowDatarate = 300Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"1\" end=\"2\" speed=\"300000000\" /></rate>")

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 25000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "50"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 3
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 3

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison-Rnd]
network = dumbbellAgg
sim-time-limit = 5.0s
seed-set=${0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client12.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client13.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client14.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client15.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 25000

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 25000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "30"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 6
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 6

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison-1-1]
network = dumbbellAgg
sim-time-limit = 20.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 2s
**.client13.tcpApp[0].tSend = 4s
**.client14.tcpApp[0].tSend = 6s
**.client15.tcpApp[0].tSend = 8s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.client11.tcp.param3 = 12
**.client12.tcp.param3 = 14
**.client13.tcp.param3 = 16
**.client14.tcp.param3 = 18
**.client15.tcp.param3 = 20

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 125000

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 125000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "30"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 6
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 6

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison-1-2]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 1s
**.client13.tcpApp[0].tSend = 10s
**.client14.tcpApp[0].tSend = 10s
**.client15.tcpApp[0].tSend = 10s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.client11.tcp.param3 = 12
**.client12.tcp.param3 = 14
**.client13.tcp.param3 = 16
**.client14.tcp.param3 = 18
**.client15.tcp.param3 = 20

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 125000

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 125000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "30"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 6
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 6

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison-1-1-Rnd]
network = dumbbellAgg
sim-time-limit = 20.0s
seed-set=${0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 0s
**.client12.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 2s
**.client13.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 4s
**.client14.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 6s
**.client15.tcpApp[0].tSend = uniform(0.006s, 0.009s) + 8s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.client11.tcp.param3 = 12
**.client12.tcp.param3 = 14
**.client13.tcp.param3 = 16
**.client14.tcp.param3 = 18
**.client15.tcp.param3 = 20

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 125000

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 125000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "30"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 6
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 6

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison1]
network = chain
sim-time-limit = 5.0s
chain.ldelay = 0.001s 
chain.ldatarate = 500Mbps#1Gbps 
chain.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 125000

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = xml("<rate><interval start=\"2.\" end=\"3\" speed=\"150000000\" /></rate>")

#**.ppp.tLow = 4s
#**.ppp.tNormal = 5s
#**.ppp.lowDatarate = 250Mbps

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 125000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.router*.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.router*.ppp[*].queue.red.wq        = 1.0
**.router*.ppp[*].queue.red.minths     = "0"
**.router*.ppp[*].queue.red.maxths     = "60"
**.router*.ppp[*].queue.red.maxps      = "1.0"
**.router*.ppp[*].queue.red.pkrates    = "1666.0"
**.router*.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5
**.tcp.lgccAdaptiveR = false
**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison1-Cellular]
network = chain
sim-time-limit = 140s #120.0s,787s, 475s, 140s, 929s, 140s
chain.ldelay = 0.017s 
chain.ldatarate = 60Mbps#1Gbps 
chain.mdatarate = 60Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 125000

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = ${xmldoc("ATT-LTE-driving-2016.xml"),xmldoc("ATT-LTE-driving.xml"),xmldoc("TMobile-LTE-driving.xml"),xmldoc("TMobile-LTE-short.xml"),xmldoc("TMobile-UMTS-driving.xml"),xmldoc("Verizon-LTE-short.xml")}

#**.ppp.tLow = 4s
#**.ppp.tNormal = 5s
#**.ppp.lowDatarate = 250Mbps

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 125000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.router*.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.router*.ppp[*].queue.red.wq        = 1.0
**.router*.ppp[*].queue.red.minths     = "0"
**.router*.ppp[*].queue.red.maxths     = "60"
**.router*.ppp[*].queue.red.maxps      = "1.0"
**.router*.ppp[*].queue.red.pkrates    = "1666.0"
**.router*.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5
**.tcp.lgccAdaptiveR = false
**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison5-Cellular]
network = chain5
sim-time-limit = 120.0s #120.0s,787s, 475s, 140s, 929s, 140s
chain5.ldelay = 0.017s 
chain5.ldatarate = 50Mbps#1Gbps 
chain5.mdatarate = 50Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "routerIng1"
**.client12.tcpApp[0].connectAddress = "routerIng2"
**.client13.tcpApp[0].connectAddress = "routerIng3"
**.client14.tcpApp[0].connectAddress = "routerIng4"
**.client15.tcpApp[0].connectAddress = "routerIng5"
**.client1*.tcpApp[0].connectPort = 1001
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 0s
**.client13.tcpApp[0].tSend = 1000s
**.client14.tcpApp[0].tSend = 1000s
**.client15.tcpApp[0].tSend = 1000s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[*].remoteAddress = "client21"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 212000

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = ${xmldoc("ATT-LTE-driving-2016.xml"),xmldoc("ATT-LTE-driving.xml"),xmldoc("TMobile-LTE-driving.xml"),xmldoc("TMobile-LTE-short.xml"),xmldoc("TMobile-UMTS-driving.xml"),xmldoc("Verizon-LTE-short.xml")}

#**.ppp.tLow = 4s
#**.ppp.tNormal = 5s
#**.ppp.lowDatarate = 250Mbps

**.routerIng*.numRelayApps = 1
**.routerIng*.relay[0].localPort = 1001
**.routerIng1.relay[0].remotePort = 1001
**.routerIng2.relay[0].remotePort = 1002
**.routerIng3.relay[0].remotePort = 1003
**.routerIng4.relay[0].remotePort = 1004
**.routerIng5.relay[0].remotePort = 1005
**.routerIng*.relay[0].remoteAddress = "routerEg"
**.routerIng*.relay[0].sendQueueThreshold = 212000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng*.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng*.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.router*.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.router*.ppp[*].queue.red.wq        = 1.0
**.router*.ppp[*].queue.red.minths     = "0"
**.router*.ppp[*].queue.red.maxths     = "60"
**.router*.ppp[*].queue.red.maxps      = "1.0"
**.router*.ppp[*].queue.red.pkrates    = "1666.0"
**.router*.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5
**.tcp.lgccAdaptiveR = false
**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000
**.tcp.mss = 1460
**.tcp2.mss = 1460


############################################################## Chained-LGC-Comparison
[Config Chained-LGC-Comparison1-Dual2]
network = chain
sim-time-limit = 5.0s
chain.ldelay = 0.001s 
chain.ldatarate = 600Mbps#1Gbps 
chain.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client11.numTcpApps = 1
**.client11.tcpApp[0].typename = "TCPSessionApp"
**.client11.tcpApp[0].active = true
**.client11.tcpApp[0].localPort = -1
**.client11.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client11.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client11.tcpApp[0].sendBytes = 1000MiB
**.client11.tcpApp[0].sendScript = ""
**.client11.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 125000

#**.routerEg.ppp[1].ppp.tLow = 2s
#**.routerEg.ppp[1].ppp.tNormal = 3s
#**.routerEg.ppp[1].ppp.lowDatarate = 150Mbps
**.routerEg.ppp[1].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")

#**.ppp.tLow = 4s
#**.ppp.tNormal = 5s
#**.ppp.lowDatarate = 250Mbps

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 125000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.router*.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.router*.ppp[*].queue.red.wq        = 1.0
**.router*.ppp[*].queue.red.minths     = "0"
**.router*.ppp[*].queue.red.maxths     = "60"
**.router*.ppp[*].queue.red.maxps      = "1.0"
**.router*.ppp[*].queue.red.pkrates    = "1666.0"
**.router*.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 1000#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5
**.tcp.lgccAdaptiveR = false
**.tcp2.lgccAdaptiveR = false
**.tcp.lgccMethod = "Dual2"
**.tcp2.lgccMethod = "Dual2"

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 500Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 655350000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 655350000

############################################################## Chained-LGC
[Config Chained-LGC]
network = dumbbellAgg
sim-time-limit = 20.0s

dumbbellAgg.ldelay = ${36.5ms}
#dumbbellAgg.ldatarate = ${5Mbps}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.relay[*].sendQueueThreshold = 25000

#**.routerEg.ppp[1].ppp.tLow = 10s
#**.routerEg.ppp[1].ppp.tNormal = 15s
#**.routerEg.ppp[1].ppp.lowDatarate = 1Mbps
**.routerEg.ppp[1].ppp.rateConfig = xml("<rate><interval start=\"10\" end=\"15\" speed=\"1000000\" /></rate>")

**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[*].sendQueueThreshold = 25000

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[*].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[*].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "20"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 500#6, ,,, 175

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 10Mbps
**.tcp.lpacing = false
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 10Mbps
**.tcp2.lpacing = false
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## Chained-LGC-Aggregated
[Config Chained-LGC-Aggregated]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client1*.tcpApp[0].connectPort = 1001
**.client1*.tcpApp[0].tOpen = 0s
#**.client11.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].tSend = 0s
**.client1*.tcpApp[0].sendBytes = 1000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[0].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[0].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[0].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
#**.routerEg.relay[*].remotePort = 1000
#**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[0].forwarding = "client11=client21:1000;client12=client22:1000;client13=client23:1000;client14=client24:1000;client15=client25:1000;"
**.routerEg.relay[*].reverse = true

#**.routerEg.numTcpApps = 9
#**.routerEg.tcpApp[*].typename = "TCPSessionApp"
#**.routerEg.tcpApp[*].active = true
#**.routerEg.tcpApp[*].localPort = -1
#**.routerEg.tcpApp[*].connectAddress = "client21"
#**.routerEg.tcpApp[*].connectPort = 1000
#**.routerEg.tcpApp[*].tOpen = 1s
#**.routerEg.tcpApp[*].tSend = 20s
#**.routerEg.tcpApp[*].sendBytes = 50MiB
#**.routerEg.tcpApp[*].sendScript = ""
#**.routerEg.tcpApp[*].tClose = 0s

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")


**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
#**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[0].interval = 0.002s
**.routerIng.relay[0].beta = 0.01
**.routerIng.relay[0].weights = "client11=0.2;client12=0.2;client13=0.2;client14=0.2;client15=0.2;"
**.routerIng.relay[0].sendQueueThreshold = 125000
**.routerIng.tcp.lgccAggregated = true
#**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[0].forwarding = "client11=routerEg:1001;client12=routerEg:1001;client13=routerEg:1001;client14=routerEg:1001;client15=routerEg:1001;"

**.routerEg.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerEg.ppp[*].queue.red.wq        = 1.0
**.routerEg.ppp[*].queue.red.minths     = "1"
**.routerEg.ppp[*].queue.red.maxths     = "20"
**.routerEg.ppp[*].queue.red.maxps      = "1.0"
**.routerEg.ppp[*].queue.red.pkrates    = "1666.0"
**.routerEg.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 500#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5

#**.tcp.lgccAdaptiveR = false
#**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp*.lpacing = false       
**.tcp.ldatarate = 500Mbps
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## Chained-LGC-Aggregated
[Config Chained-LGC-Aggregated-test]
network = dumbbellAgg
sim-time-limit = 5.0s
dumbbellAgg.ldelay = 0.001s 
dumbbellAgg.ldatarate = 500Mbps#1Gbps 
dumbbellAgg.mdatarate = 500Mbps#1Gbps 

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client1*.tcpApp[0].connectPort = 1001
**.client1*.tcpApp[0].tOpen = 0s
**.client11.tcpApp[0].tSend = 0s
**.client12.tcpApp[0].tSend = 0s
**.client1*.tcpApp[0].tSend = 10s
**.client1*.tcpApp[0].sendBytes = 10000MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.client1*.tcpApp[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[0].dataTransferMode = "bytecount" #"bytestream"
**.routerIng.relay[0].dataTransferMode2 = "object" #"bytestream"
**.routerEg.relay[0].dataTransferMode = "object" #"bytestream"
**.routerEg.relay[0].dataTransferMode2 = "object" #"bytestream"
**.client2*.tcpApp[0].dataTransferMode = "object" #"bytestream"

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
#**.routerEg.relay[*].remotePort = 1000
#**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[0].forwarding = "client11=client21:1000;client12=client22:1000;"
**.routerEg.relay[*].reverse = true

#**.routerEg.numTcpApps = 9
#**.routerEg.tcpApp[*].typename = "TCPSessionApp"
#**.routerEg.tcpApp[*].active = true
#**.routerEg.tcpApp[*].localPort = -1
#**.routerEg.tcpApp[*].connectAddress = "client21"
#**.routerEg.tcpApp[*].connectPort = 1000
#**.routerEg.tcpApp[*].tOpen = 1s
#**.routerEg.tcpApp[*].tSend = 20s
#**.routerEg.tcpApp[*].sendBytes = 50MiB
#**.routerEg.tcpApp[*].sendScript = ""
#**.routerEg.tcpApp[*].tClose = 0s

#**.routerIng.ppp[5].ppp.tLow = 2s
#**.routerIng.ppp[5].ppp.tNormal = 3s
#**.routerIng.ppp[5].ppp.lowDatarate = 150Mbps
**.routerIng.ppp[5].ppp.rateConfig = xml("<rate><interval start=\"2\" end=\"3\" speed=\"150000000\" /></rate>")



**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
#**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[0].interval = 0.002s
**.routerIng.relay[0].beta = 0.01
**.routerIng.relay[0].weights = "client11=0.5;client12=0.5;"
**.routerIng.relay[0].sendQueueThreshold = 125000
**.routerIng.tcp.lgccAggregated = true
#**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.relay[0].forwarding = "client11=routerEg:1001;client12=routerEg:1001;"

**.routerEg.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerEg.ppp[*].queue.red.wq        = 1.0
**.routerEg.ppp[*].queue.red.minths     = "1"
**.routerEg.ppp[*].queue.red.maxths     = "20"
**.routerEg.ppp[*].queue.red.maxps      = "1.0"
**.routerEg.ppp[*].queue.red.pkrates    = "1666.0"
**.routerEg.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 500#6, ,,, 175

**.tcp.lgccPhi1 = 10
**.tcp.lgccPhi2 = 5
**.tcp2.lgccPhi1 = 10
**.tcp2.lgccPhi2 = 5

#**.tcp.lgccAdaptiveR = false
#**.tcp2.lgccAdaptiveR = false

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp*.lpacing = false       
**.tcp.ldatarate = 500Mbps
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 500Mbps
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## Chained-LGC-Aggregated-Varying
[Config Chained-LGC-Aggregated-Varying]
network = dumbbellAgg

dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client1*.tcpApp[0].connectPort = 1001
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[*].reverse = true

**.routerEg.numTcp2Apps = 1
**.routerEg.tcp2App[0].typename = "TCPSinkApp"
**.routerEg.tcp2App[0].localPort = 1002


**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[0].interval = 0.072s
**.routerIng.relay[0].beta = 0.01
**.routerIng.tcp.lgccAggregated = true
**.routerIng.relay[*].remoteAddress = "routerEg"

**.routerIng.numTcp2Apps = 4
**.routerIng.tcp2App[*].typename = "TCPSessionApp"
**.routerIng.tcp2App[*].active = true
**.routerIng.tcp2App[*].localPort = -1
**.routerIng.tcp2App[*].connectAddress = "routerEg"
**.routerIng.tcp2App[*].connectPort = 1002
**.routerIng.tcp2App[*].tOpen = 1s
**.routerIng.tcp2App[*].tSend = 2s
**.routerIng.tcp2App[*].sendBytes = 5MiB
**.routerIng.tcp2App[*].sendScript = ""
**.routerIng.tcp2App[*].tClose = 0s


**.routerIng.ppp[*].queueType           = "inet.examples.netperfmeter.REDQueue"
**.routerIng.ppp[*].queue.red.wq        = 1.0
**.routerIng.ppp[*].queue.red.minths     = "1"
**.routerIng.ppp[*].queue.red.maxths     = "20"
**.routerIng.ppp[*].queue.red.maxps      = "1.0"
**.routerIng.ppp[*].queue.red.pkrates    = "1666.0"
**.routerIng.ppp[*].queue.red.marks = "1"

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 500#6, ,,, 175

**.tcp.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sackSupport = false       
**.tcp.ldatarate = 10Mbps
**.tcp2.tcpAlgorithmClass = "LGCC"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp2.sackSupport = false                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.ldatarate = 10Mbps
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000

############################################################## Chained-TCP-Aggregated-Varying
[Config Chained-TCP-Aggregated-Varying]
network = dumbbellAgg

dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client1*.tcpApp[0].connectPort = 1001
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 1
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[*].reverse = true
**.routerEg.numTcp2Apps = 1
**.routerEg.tcp2App[0].typename = "TCPSinkApp"
**.routerEg.tcp2App[0].localPort = 1002
**.routerEg.ppp[*].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[*].queue.frameCapacity = 62
**.routerEg.tcp2.param5 = 0.0

**.routerIng.numRelayApps = 1
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.numTcp2Apps = 8
**.routerIng.tcp2App[*].typename = "TCPSessionApp"
**.routerIng.tcp2App[*].active = true
**.routerIng.tcp2App[*].localPort = -1
**.routerIng.tcp2App[*].connectAddress = "routerEg"
**.routerIng.tcp2App[*].connectPort = 1002
**.routerIng.tcp2App[*].tOpen = 1s
**.routerIng.tcp2App[*].tSend = 2s
**.routerIng.tcp2App[*].sendBytes = 2MiB
**.routerIng.tcp2App[*].sendScript = ""
**.routerIng.tcp2App[*].tClose = 0s
**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
**.routerIng.ppp[*].queue.frameCapacity = 62#6, ,,, 175

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 62#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.param5 = 0.001
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.param5 = 0.01

############################################################## Chained-TCP-Aggregated-Varying
[Config Chained-TCP-Varying]
network = dumbbellAgg

dumbbellAgg.ldelay = ${36.5ms}

**.client2*.numTcpApps = 1
**.client2*.tcpApp[0].typename = "TCPSinkApp"
**.client2*.tcpApp[0].localPort = 1000

**.client1*.numTcpApps = 1
**.client1*.tcpApp[0].typename = "TCPSessionApp"
**.client1*.tcpApp[0].active = true
**.client1*.tcpApp[0].localPort = -1
**.client1*.tcpApp[0].connectAddress = "routerIng"
**.client11.tcpApp[0].connectPort = 1001
**.client12.tcpApp[0].connectPort = 1002
**.client13.tcpApp[0].connectPort = 1003
**.client14.tcpApp[0].connectPort = 1004
**.client15.tcpApp[0].connectPort = 1005
**.client1*.tcpApp[0].tOpen = 1s
**.client1*.tcpApp[0].tSend = 2s
**.client1*.tcpApp[0].sendBytes = 100MiB
**.client1*.tcpApp[0].sendScript = ""
**.client1*.tcpApp[0].tClose = 0s

**.routerEg.numRelayApps = 5
**.routerEg.relay[0].localPort = 1001
**.routerEg.relay[1].localPort = 1002
**.routerEg.relay[2].localPort = 1003
**.routerEg.relay[3].localPort = 1004
**.routerEg.relay[4].localPort = 1005
**.routerEg.relay[*].remotePort = 1000
**.routerEg.relay[0].remoteAddress = "client21"
**.routerEg.relay[1].remoteAddress = "client22"
**.routerEg.relay[2].remoteAddress = "client23"
**.routerEg.relay[3].remoteAddress = "client24"
**.routerEg.relay[4].remoteAddress = "client25"
**.routerEg.relay[*].reverse = true
**.routerEg.numTcp2Apps = 1
**.routerEg.tcp2App[0].typename = "TCPSinkApp"
**.routerEg.tcp2App[0].localPort = 1020


**.routerIng.numRelayApps = 5
**.routerIng.relay[0].localPort = 1001
**.routerIng.relay[0].remotePort = 1001
**.routerIng.relay[1].localPort = 1002
**.routerIng.relay[1].remotePort = 1002
**.routerIng.relay[2].localPort = 1003
**.routerIng.relay[2].remotePort = 1003
**.routerIng.relay[3].localPort = 1004
**.routerIng.relay[3].remotePort = 1004
**.routerIng.relay[4].localPort = 1005
**.routerIng.relay[4].remotePort = 1005
**.routerIng.relay[*].remoteAddress = "routerEg"
**.routerIng.numTcp2Apps = 8
**.routerIng.tcp2App[*].typename = "TCPSessionApp"
**.routerIng.tcp2App[*].active = true
**.routerIng.tcp2App[*].localPort = -1
**.routerIng.tcp2App[*].connectAddress = "routerEg"
**.routerIng.tcp2App[*].connectPort = 1020
**.routerIng.tcp2App[*].tOpen = 1s
**.routerIng.tcp2App[*].tSend = 2s
**.routerIng.tcp2App[*].sendBytes = 2MiB
**.routerIng.tcp2App[*].sendScript = ""
**.routerIng.tcp2App[*].tClose = 0s

**.routerEg.ppp[*].queueType = "DropTailQueue" # in routers
**.routerEg.ppp[*].queue.frameCapacity = 180
**.routerEg.tcp2.param5 = 0.0

**.routerIng.ppp[*].queueType = "DropTailQueue" # in routers
**.routerIng.ppp[*].queue.frameCapacity = 180#6, ,,, 175

**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 180#6, ,,, 175

**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535000
**.tcp2.windowScalingSupport = true
**.tcp2.advertisedWindow = 65535000
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.param5 = 0.001
**.tcp2.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp2.param5 = 0.01



